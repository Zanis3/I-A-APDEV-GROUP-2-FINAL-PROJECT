/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mercairlineticketing.MERCAirlineTicketing;

import java.text.DecimalFormat;

/**
 *
 * @author user
 */
public class Transaction extends javax.swing.JFrame {

    private double transactionFee = 0;
    private static double taxFee = 0;
    private static double destinationPrice = 0;
    private static double baggageTotal = 0;
    private static double insuranceTotal = 0;
    private double totalPrice = 0;
    private static double seniorsPrice = 0;
    
    DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");
    private String formattedPrice;
    
    public Transaction() {
        super("Himpapawid Airlines Ticketing System");
        
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        lblBookingSummary = new javax.swing.JLabel();
        pnlPaymentDetails = new javax.swing.JPanel();
        rdoCash = new javax.swing.JRadioButton();
        rdoCreditCard = new javax.swing.JRadioButton();
        btnPayment = new javax.swing.JButton();
        lblModeOfPayment = new javax.swing.JLabel();
        lblPaymentDetails = new javax.swing.JLabel();
        txtPassengerPayment = new javax.swing.JTextField();
        txtCreditCardDetails = new javax.swing.JLabel();
        pnlFlightDetails = new javax.swing.JPanel();
        lblSummary = new javax.swing.JLabel();
        lblFlight = new javax.swing.JLabel();
        txtFlight = new javax.swing.JTextField();
        txtOneWayRoundTrip = new javax.swing.JTextField();
        lblFlightType = new javax.swing.JLabel();
        txtRegularPrivateBusiness = new javax.swing.JTextField();
        txtPassengerCount = new javax.swing.JTextField();
        lblPassengers = new javax.swing.JLabel();
        pnlPaymentSummary = new javax.swing.JPanel();
        lblTransactionFee = new javax.swing.JLabel();
        txtTransactionFee = new javax.swing.JTextField();
        lblPaymentSummary = new javax.swing.JLabel();
        lblTaxFee = new javax.swing.JLabel();
        txtTaxFee = new javax.swing.JTextField();
        lblTravelPrice = new javax.swing.JLabel();
        txtTravelPrice = new javax.swing.JTextField();
        lblBaggageTotal = new javax.swing.JLabel();
        txtBaggageTotal = new javax.swing.JTextField();
        lblInsuranceTotal = new javax.swing.JLabel();
        txtInsuranceTotal = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnPriceBreakdown = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblBookingSummary.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        lblBookingSummary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBookingSummary.setText("Booking Summary");

        pnlPaymentDetails.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        rdoCash.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        rdoCash.setText("Cash");

        rdoCreditCard.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        rdoCreditCard.setText("Credit Card");

        btnPayment.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnPayment.setText("Confirm Payment Details");

        lblModeOfPayment.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblModeOfPayment.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblModeOfPayment.setText("Mode of Payment:");

        lblPaymentDetails.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblPaymentDetails.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPaymentDetails.setText("Payment Details:");

        txtCreditCardDetails.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtCreditCardDetails.setText("Credit Card Details:");

        javax.swing.GroupLayout pnlPaymentDetailsLayout = new javax.swing.GroupLayout(pnlPaymentDetails);
        pnlPaymentDetails.setLayout(pnlPaymentDetailsLayout);
        pnlPaymentDetailsLayout.setHorizontalGroup(
            pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPaymentDetailsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPayment)
                    .addGroup(pnlPaymentDetailsLayout.createSequentialGroup()
                        .addGroup(pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblModeOfPayment)
                            .addGroup(pnlPaymentDetailsLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(rdoCash)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdoCreditCard)))
                        .addGap(57, 57, 57)
                        .addGroup(pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblPaymentDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPassengerPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(82, 82, 82)
                        .addComponent(txtCreditCardDetails)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPaymentDetailsLayout.setVerticalGroup(
            pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPaymentDetailsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModeOfPayment)
                    .addComponent(lblPaymentDetails)
                    .addComponent(txtCreditCardDetails))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoCash)
                    .addComponent(rdoCreditCard)
                    .addComponent(txtPassengerPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(btnPayment)
                .addGap(32, 32, 32))
        );

        pnlFlightDetails.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblSummary.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblSummary.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSummary.setText("Flight Details");

        lblFlight.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblFlight.setText("Flight:");

        txtFlight.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtFlight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFlight.setText(String.valueOf(Destination.cboOrigin.getSelectedItem()) + " to " + String.valueOf(Destination.cboDestination.getSelectedItem()));
        txtFlight.setEnabled(false);

        txtOneWayRoundTrip.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtOneWayRoundTrip.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtOneWayRoundTrip.setText(Passengers.oneWayRoundTrip);
        txtOneWayRoundTrip.setEnabled(false);

        lblFlightType.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblFlightType.setText("Flight Type:");

        txtRegularPrivateBusiness.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtRegularPrivateBusiness.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRegularPrivateBusiness.setText(String.valueOf(AirlineType.cboAirlineType.getSelectedItem()));
        txtRegularPrivateBusiness.setEnabled(false);
        txtRegularPrivateBusiness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegularPrivateBusinessActionPerformed(evt);
            }
        });

        txtPassengerCount.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        txtPassengerCount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPassengerCount.setText(String.valueOf(AirlineType.passengerCount));
        txtPassengerCount.setEnabled(false);

        lblPassengers.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        lblPassengers.setText("Passengers:");

        javax.swing.GroupLayout pnlFlightDetailsLayout = new javax.swing.GroupLayout(pnlFlightDetails);
        pnlFlightDetails.setLayout(pnlFlightDetailsLayout);
        pnlFlightDetailsLayout.setHorizontalGroup(
            pnlFlightDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFlightDetailsLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblPassengers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassengerCount, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFlightDetailsLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(pnlFlightDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFlightDetailsLayout.createSequentialGroup()
                        .addComponent(lblSummary)
                        .addGap(193, 193, 193))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFlightDetailsLayout.createSequentialGroup()
                        .addGroup(pnlFlightDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFlightType)
                            .addComponent(lblFlight))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFlightDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRegularPrivateBusiness, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlFlightDetailsLayout.createSequentialGroup()
                                .addComponent(txtFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtOneWayRoundTrip, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(54, 54, 54))))
        );
        pnlFlightDetailsLayout.setVerticalGroup(
            pnlFlightDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFlightDetailsLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblSummary)
                .addGap(18, 18, 18)
                .addGroup(pnlFlightDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassengers)
                    .addComponent(txtPassengerCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFlightDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFlight)
                    .addComponent(txtOneWayRoundTrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFlight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFlightDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegularPrivateBusiness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFlightType))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        pnlPaymentSummary.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblTransactionFee.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        lblTransactionFee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTransactionFee.setText("Transaction Fee:");

        if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
            transactionFee = 255.00;
            formattedPrice = decimalFormat.format(transactionFee);
        }
        else if(AirlineType.cboAirlineType.getSelectedItem().equals("Private") || AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
            transactionFee = 550.00;
            formattedPrice = decimalFormat.format(transactionFee);
        }
        txtTransactionFee.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        txtTransactionFee.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTransactionFee.setText(formattedPrice);
        txtTransactionFee.setEnabled(false);

        lblPaymentSummary.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblPaymentSummary.setText("Payment Summary");

        lblTaxFee.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        lblTaxFee.setText("Travel Tax:");

        txtTaxFee.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        txtTaxFee.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        taxMethod();
        formattedPrice = decimalFormat.format(taxFee);
        txtTaxFee.setText(formattedPrice);
        txtTaxFee.setEnabled(false);

        lblTravelPrice.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        lblTravelPrice.setText("Travel Price:");

        txtTravelPrice.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        txtTravelPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        destinationPriceMethod();

        formattedPrice = decimalFormat.format(destinationPrice);
        txtTravelPrice.setText(formattedPrice);
        txtTravelPrice.setEnabled(false);

        lblBaggageTotal.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        lblBaggageTotal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBaggageTotal.setText("Baggage Total:");

        txtBaggageTotal.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        txtBaggageTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        baggageMethod();

        formattedPrice = decimalFormat.format(baggageTotal);
        txtBaggageTotal.setText(formattedPrice);
        txtBaggageTotal.setEnabled(false);

        lblInsuranceTotal.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        lblInsuranceTotal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblInsuranceTotal.setText("Insurance Total:");

        txtInsuranceTotal.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        txtInsuranceTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        insuranceMethod();
        formattedPrice = decimalFormat.format(insuranceTotal);
        txtInsuranceTotal.setText(formattedPrice);
        txtInsuranceTotal.setEnabled(false);
        txtInsuranceTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInsuranceTotalActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        lblTotal.setText("Total:");

        txtTotal.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalPrice = transactionFee + taxFee + destinationPrice + baggageTotal + insuranceTotal;
        formattedPrice = decimalFormat.format(totalPrice);
        txtTotal.setText(formattedPrice);
        txtTotal.setEnabled(false);

        btnPriceBreakdown.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnPriceBreakdown.setText("Price Breakdown >>");
        btnPriceBreakdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriceBreakdownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPaymentSummaryLayout = new javax.swing.GroupLayout(pnlPaymentSummary);
        pnlPaymentSummary.setLayout(pnlPaymentSummaryLayout);
        pnlPaymentSummaryLayout.setHorizontalGroup(
            pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPaymentSummaryLayout.createSequentialGroup()
                .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPaymentSummaryLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTravelPrice)
                            .addComponent(lblTaxFee)
                            .addComponent(lblTransactionFee))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTransactionFee)
                            .addComponent(txtTaxFee, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(txtTravelPrice))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPaymentSummaryLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnPriceBreakdown)
                        .addGap(40, 40, 40)))
                .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPaymentSummaryLayout.createSequentialGroup()
                        .addGap(0, 26, Short.MAX_VALUE)
                        .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBaggageTotal, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblInsuranceTotal, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBaggageTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInsuranceTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlPaymentSummaryLayout.createSequentialGroup()
                        .addComponent(lblTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal)))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPaymentSummaryLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblPaymentSummary)
                .addGap(167, 167, 167))
        );
        pnlPaymentSummaryLayout.setVerticalGroup(
            pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPaymentSummaryLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblPaymentSummary)
                .addGap(18, 18, 18)
                .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTravelPrice)
                    .addComponent(txtTravelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBaggageTotal)
                    .addComponent(txtBaggageTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTransactionFee)
                    .addComponent(txtTransactionFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInsuranceTotal)
                    .addComponent(txtInsuranceTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTaxFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTaxFee))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPaymentSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPriceBreakdown)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTotal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlFlightDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlPaymentSummary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(382, 382, 382)
                        .addComponent(lblBookingSummary))
                    .addComponent(pnlPaymentDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblBookingSummary)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPaymentSummary, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlFlightDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(pnlPaymentDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPriceBreakdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriceBreakdownActionPerformed
        PriceBreakdown pb = new PriceBreakdown();
        pb.setVisible(true);
    }//GEN-LAST:event_btnPriceBreakdownActionPerformed

    private void txtInsuranceTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInsuranceTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInsuranceTotalActionPerformed

    private void txtRegularPrivateBusinessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegularPrivateBusinessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegularPrivateBusinessActionPerformed

    private static void destinationPriceMethod(){
        double privatePrice[] = {8000.0, 9800.0, 9100.0, 9850.0, 27450.0, 30890.0, 40450.0, 43855.0, 8505.0, 14300.0};
        double businessPrice[] = {12500.0, 12950.0, 10500.0, 10975.0, 37390.0, 39650.0, 45355.0, 49780.0, 12345.0, 16320.0};
        double regularPrice[] = {3500.0, 3900.0, 3200.0, 3575.0, 12055.0, 13100.0, 27800.0, 29400.0, 3200.0, 4600.0};
        
        String flight = Passengers.txtFlight.getText();
        
        switch(flight){
            case "Manila to Batanes":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[0];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[0];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[0];
            }
            break;
            
            case "Batanes to Manila":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[1];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[1];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[1];
            }
            break;
            
            case "Manila to Palawan":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[2];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[2];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[2];
            }
            break;
            
            case "Palawan to Manila":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[3];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[3];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[3];
            }
            break;
            
            case "Manila to South Korea":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[4];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[4];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[4];
            }
            break;
            
            case "South Korea to Manila":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[5];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[5];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[5];
            }
            break;
            
            case "Manila to Japan":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[6];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[6];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[6];
            }
            break;
            
            case "Japan to Manila":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[7];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[7];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[7];
            }
            break;
            
            case "Manila to Vietnam":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[8];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[8];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[8];
            }
            break;
            
            case "Vietnam to Manila":
            if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
                destinationPrice = privatePrice[9];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
                destinationPrice = businessPrice[9];
            }
            else if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
                destinationPrice = regularPrice[9];
            }
            break;
        }
        seniorsPrice = destinationPrice * Double.valueOf(AirlineType.seniorCount);
        seniorsPrice = seniorsPrice - (seniorsPrice * 0.2);
        destinationPrice = destinationPrice * Double.valueOf(AirlineType.passengerCount - AirlineType.seniorCount) + seniorsPrice;

        if(Destination.rdoRoundTrip.isSelected() == true){
            destinationPrice = destinationPrice * 2;
        }
    }
    
    static void baggageMethod(){
        if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
            baggageTotal = 950.0 * Double.valueOf(AirlineType.passengerCount);
        }
        else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
            baggageTotal = 2850.0 * Double.valueOf(AirlineType.passengerCount);
        }
        else if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
            baggageTotal = 1250.0 * Double.valueOf(AirlineType.passengerCount);
        }
    }
    
    static void taxMethod(){
        if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
            taxFee = 2500.0 * Double.valueOf(AirlineType.passengerCount - AirlineType.seniorCount);
        }
        else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
            taxFee = 5700.0 * Double.valueOf(AirlineType.passengerCount - AirlineType.seniorCount);
        }
        else if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
            taxFee = 4260.0 * Double.valueOf(AirlineType.passengerCount - AirlineType.seniorCount);
        }
        
        if(Destination.rdoRoundTrip.isSelected() == true){
            taxFee = taxFee * 2;
        }
    }
    
    static void insuranceMethod(){
        if(AirlineType.cboAirlineType.getSelectedItem().equals("Regular")){
            insuranceTotal = 950.0 * Double.valueOf(Passengers.insuranceCounter);
        }
        else if(AirlineType.cboAirlineType.getSelectedItem().equals("Business")){
            insuranceTotal = 6500.0 * Double.valueOf(Passengers.insuranceCounter);
        }
        else if(AirlineType.cboAirlineType.getSelectedItem().equals("Private")){
            insuranceTotal = 4500.0 * Double.valueOf(Passengers.insuranceCounter);
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnPriceBreakdown;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblBaggageTotal;
    private javax.swing.JLabel lblBookingSummary;
    private javax.swing.JLabel lblFlight;
    private javax.swing.JLabel lblFlightType;
    private javax.swing.JLabel lblInsuranceTotal;
    private javax.swing.JLabel lblModeOfPayment;
    private javax.swing.JLabel lblPassengers;
    private javax.swing.JLabel lblPaymentDetails;
    private javax.swing.JLabel lblPaymentSummary;
    private javax.swing.JLabel lblSummary;
    private javax.swing.JLabel lblTaxFee;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTransactionFee;
    private javax.swing.JLabel lblTravelPrice;
    private javax.swing.JPanel pnlFlightDetails;
    private javax.swing.JPanel pnlPaymentDetails;
    private javax.swing.JPanel pnlPaymentSummary;
    private javax.swing.JRadioButton rdoCash;
    private javax.swing.JRadioButton rdoCreditCard;
    private javax.swing.JTextField txtBaggageTotal;
    private javax.swing.JLabel txtCreditCardDetails;
    private javax.swing.JTextField txtFlight;
    private javax.swing.JTextField txtInsuranceTotal;
    private javax.swing.JTextField txtOneWayRoundTrip;
    private javax.swing.JTextField txtPassengerCount;
    private javax.swing.JTextField txtPassengerPayment;
    private javax.swing.JTextField txtRegularPrivateBusiness;
    private javax.swing.JTextField txtTaxFee;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTransactionFee;
    private javax.swing.JTextField txtTravelPrice;
    // End of variables declaration//GEN-END:variables
}
